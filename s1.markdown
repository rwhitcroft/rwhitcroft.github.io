---
layout: default
---
<br/>
# SentinelOne Agent Bypass
<hr/>

## What is this?
This is a write-up describing the discovery and exploitation of a vulnerability in Sentinel Agent ("S1"), the in-process monitoring component of the SentinelOne platform.

<hr/>

## What is SentinelOne?
SentinelOne is a cybersecurity platform known for its robust Endpoint Detection and Response (EDR) capabilities. It utilizes AI and machine learning to deliver real-time threat detection, automated response, and full visibility into endpoint activities.

SentinelOne is widely adopted across various industries due to its effectiveness in handling sophisticated attacks, ease of deployment, and comprehensive threat intelligence capabilities. Its ability to autonomously detect and respond to threats without manual intervention sets it apart as a leader in the EDR space.

*(ChatGPT)*

<hr/>

## What is the vulnerability?
Successful exploitation of the vulnerability blinds the in-process detection, meaning you can run even the most toxic shellcode (e.g., meterpreter) without it getting detected. You can also remotely blind processes and inject into them, also without detection.

<hr/>

## What is "in-process detection"?
When the system boots, S1's kernel driver (`SentinelMonitor.sys`) is loaded. This driver calls the `PsSetCreateProcessNotifyRoutine()` Windows API to tell Windows that it wants to be notified every time a new process is created.

Now, whenever a new process is created, the driver is notified, and it has the opportunity to perform some tasks as part of the process creation. One of these tasks is injecting a DLL into the newly created process. This DLL is named `InProcessClient64.dll` on x64 systems and its purpose is to monitor the process for threats. It performs numerous timer- or event-driven tasks such as scanning memory for threats and watching for suspicious memory operations and network connections.

If we use WinDbg to debug notepad.exe, we can see this DLL loaded alongside all the other modules in the process:
```
0:000> lm
start             end                 module name
00007ff6`2e580000 00007ff6`2e5da000   notepad    (deferred)             
00007ffd`f8c10000 00007ffd`f8ea2000   COMCTL32   (deferred)             
00007ffe`14a80000 00007ffe`14e96000   InProcessClient64   (deferred)
00007ffe`151e0000 00007ffe`15208000   bcrypt     (deferred)             
00007ffe`15380000 00007ffe`15491000   ucrtbase   (deferred)             
00007ffe`154a0000 00007ffe`1585a000   KERNELBASE   (deferred)             
...snip...
```

We can get some information about the DLL:
```
0:000> lmDvm InProcessClient64
start             end                 module name
00007ffe`14a80000 00007ffe`14e96000   InProcessClient64   (deferred)             
    Image path: C:\Program Files\SentinelOne\Sentinel Agent 24.1.4.257\InProcessClient64.dll
    Image name: InProcessClient64.dll
    Timestamp:        Thu Sep 26 15:37:12 2024 (66F5B7E8)
    CheckSum:         0040B65F
    ImageSize:        00416000
    File version:     24.1.4.257
    Product version:  24.1.4.257
    File type:        2.0 Dll
    Information from resource tables:
        CompanyName:      SentinelOne, Inc.
        ProductName:      Sentinel Agent
        InternalName:     WinHostDll
        OriginalFilename: WinHostDll.dll
        ProductVersion:   24.1.4.257
        FileVersion:      24.1.4.257
        FileDescription:  WinAgentHostDll
        LegalCopyright:   SentinelOne, Inc.
```

<hr/>
